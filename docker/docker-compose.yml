version: "3.7"

services:
  fast_api:
    container_name: fast_api
    build:
      context: ../.
      dockerfile: ./docker/fast_api/Dockerfile
    working_dir: /app
    volumes:
      - ../fast_api:/app:cached
    ports:
      - 8000:8000
    tty: true
    environment:
      MONGO_DATABASE_NAME: mongodb
      MONGO_DATABASE_USER: root
      MONGO_DATABASE_PASSWORD: root
      MONGO_DATABASE_CONTAINER_NAME: mongo_db
      MONGO_DATABASE_PORT: 27017

    command: wait-for-it.sh mongo_db:27017 --timeout=30 -- uvicorn app:app --reload --host 0.0.0.0 --port 8000
    networks:
      - fastapi-mongo-network

  mongodb:
    container_name: mongo_db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
    build:
      context: .
      dockerfile: ./mongo_db/Dockerfile
    ports:
      - 27017:27017
    tty: true
    volumes:
      - ./mongo_db/db:/data/db
      - ./mongo_db/configdb:/data/configdb
      - ./mongo_db/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
    networks:
      - fastapi-mongo-network

  mongo-express:
    container_name: mongo_express
    build:
      context: .
      dockerfile: ./mongo-express/Dockerfile
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
      ME_CONFIG_MONGODB_SERVER: mongo_db
    ports:
      - 8081:8081
    tty: true
    command: wait-for-it.sh mongo_db:27017 --timeout=30 -- node app
    restart: unless-stopped
    networks:
      - fastapi-mongo-network

networks:
  fastapi-mongo-network:
    driver: bridge
